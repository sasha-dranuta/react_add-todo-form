{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","completed","title","id","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","todosWithUser","App","useState","setTodo","newTodoTitle","setTodoTitle","selectedUser","setSelectedUser","hasTitleError","setHasTitleError","hasUserError","setHasUserError","action","method","onSubmit","event","preventDefault","newTodo","Math","max","previoutTodo","addNewTodo","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.caeafee2.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../Types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\n\nimport classNames from 'classnames';\nimport { Todo } from '../../Types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed,\n    user,\n    title,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\n\nimport { Todo } from '../../Types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo\n        todo={todo}\n        key={todo.id}\n      />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { User } from './Types/User';\nimport { Todo } from './Types/Todo';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nfunction getMaxTodoId(todos: Todo[]): number {\n  return Math.max(...todos.map(todo => todo.id));\n}\n\nconst todosWithUser: Todo[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: getUser(todo.userId),\n  };\n});\n\nexport const App: React.FC = () => {\n  const [todo, setTodo] = useState<Todo[]>(todosWithUser);\n  const [newTodoTitle, setTodoTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const addNewTodo = (title: string, userId: number) => {\n    const newTodo: Todo = {\n      id: getMaxTodoId(todo) + 1,\n      title,\n      userId,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    setTodo((previoutTodo) => [...previoutTodo, newTodo]);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!newTodoTitle);\n    setHasUserError(!selectedUser);\n\n    if (newTodoTitle && selectedUser) {\n      addNewTodo(newTodoTitle, selectedUser);\n\n      setTodoTitle('');\n      setSelectedUser(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:&nbsp;\n            <input\n              type=\"text\"\n              value={newTodoTitle}\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              onChange={event => {\n                setTodoTitle(event.target.value);\n                setHasTitleError(false);\n              }}\n            />\n            {hasTitleError && (\n              <span className=\"error\">\n                Please enter a title\n              </span>\n            )}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:&nbsp;\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUser}\n              onChange={event => {\n                setSelectedUser(+event.target.value);\n                setHasUserError(false);\n              }}\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n\n              {usersFromServer.map((user) => (\n                <option key={user.id} value={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n\n            {hasUserError && (\n              <span className=\"error\">\n                Please choose a user\n              </span>\n            )}\n          </label>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todo} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}